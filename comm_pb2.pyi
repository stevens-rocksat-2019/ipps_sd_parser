# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Iterable as typing___Iterable,
    List as typing___List,
    Optional as typing___Optional,
    Tuple as typing___Tuple,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class PowerState(int):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    @classmethod
    def Name(cls, number: int) -> str: ...
    @classmethod
    def Value(cls, name: str) -> PowerState: ...
    @classmethod
    def keys(cls) -> typing___List[str]: ...
    @classmethod
    def values(cls) -> typing___List[PowerState]: ...
    @classmethod
    def items(cls) -> typing___List[typing___Tuple[str, PowerState]]: ...
OFF = typing___cast(PowerState, 0)
ON = typing___cast(PowerState, 1)
ERROR = typing___cast(PowerState, 3)

class RailConfiguration(google___protobuf___message___Message):
    powerRail = ... # type: int
    currentLimit = ... # type: float
    voltageCutoff = ... # type: float
    currentLimitEnabled = ... # type: bool
    voltageLimitEnabled = ... # type: bool
    timeLimit = ... # type: int
    timeLimitEnabled = ... # type: bool
    dutyCycle = ... # type: float

    def __init__(self,
        powerRail : int,
        currentLimit : typing___Optional[float] = None,
        voltageCutoff : typing___Optional[float] = None,
        currentLimitEnabled : typing___Optional[bool] = None,
        voltageLimitEnabled : typing___Optional[bool] = None,
        timeLimit : typing___Optional[int] = None,
        timeLimitEnabled : typing___Optional[bool] = None,
        dutyCycle : typing___Optional[float] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> RailConfiguration: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"currentLimit",u"currentLimitEnabled",u"dutyCycle",u"powerRail",u"timeLimit",u"timeLimitEnabled",u"voltageCutoff",u"voltageLimitEnabled"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"currentLimit",u"currentLimitEnabled",u"dutyCycle",u"powerRail",u"timeLimit",u"timeLimitEnabled",u"voltageCutoff",u"voltageLimitEnabled"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"currentLimit",b"currentLimit",u"currentLimitEnabled",b"currentLimitEnabled",u"dutyCycle",b"dutyCycle",u"powerRail",b"powerRail",u"timeLimit",b"timeLimit",u"timeLimitEnabled",b"timeLimitEnabled",u"voltageCutoff",b"voltageCutoff",u"voltageLimitEnabled",b"voltageLimitEnabled"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"currentLimit",b"currentLimitEnabled",b"dutyCycle",b"powerRail",b"timeLimit",b"timeLimitEnabled",b"voltageCutoff",b"voltageLimitEnabled"]) -> None: ...

class PowerConfiguration(google___protobuf___message___Message):

    @property
    def railConfiguration(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[RailConfiguration]: ...

    def __init__(self,
        railConfiguration : typing___Optional[typing___Iterable[RailConfiguration]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> PowerConfiguration: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"railConfiguration"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"railConfiguration"]) -> None: ...

class PowerControl(google___protobuf___message___Message):
    powerRail = ... # type: int
    powerState = ... # type: PowerState

    def __init__(self,
        powerRail : typing___Optional[int] = None,
        powerState : typing___Optional[PowerState] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> PowerControl: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"powerRail",u"powerState"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"powerRail",u"powerState"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"powerRail",b"powerRail",u"powerState",b"powerState"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"powerRail",b"powerState"]) -> None: ...

class PowerRailInfo(google___protobuf___message___Message):
    powerRail = ... # type: int
    voltage = ... # type: float
    current = ... # type: float
    powerState = ... # type: PowerState

    def __init__(self,
        powerRail : typing___Optional[int] = None,
        voltage : typing___Optional[float] = None,
        current : typing___Optional[float] = None,
        powerState : typing___Optional[PowerState] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> PowerRailInfo: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"current",u"powerRail",u"powerState",u"voltage"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"current",u"powerRail",u"powerState",u"voltage"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"current",b"current",u"powerRail",b"powerRail",u"powerState",b"powerState",u"voltage",b"voltage"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"current",b"powerRail",b"powerState",b"voltage"]) -> None: ...

class PowerEvent(google___protobuf___message___Message):
    class EventType(int):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        @classmethod
        def Name(cls, number: int) -> str: ...
        @classmethod
        def Value(cls, name: str) -> PowerEvent.EventType: ...
        @classmethod
        def keys(cls) -> typing___List[str]: ...
        @classmethod
        def values(cls) -> typing___List[PowerEvent.EventType]: ...
        @classmethod
        def items(cls) -> typing___List[typing___Tuple[str, PowerEvent.EventType]]: ...
    NORMAL = typing___cast(EventType, 0)
    CURRENT_LIMITED = typing___cast(EventType, 1)
    VOLTAGE_LIMITED = typing___cast(EventType, 2)
    POWER_LIMITED = typing___cast(EventType, 3)
    TIME_LIMITED = typing___cast(EventType, 4)

    powerRail = ... # type: int
    eventType = ... # type: PowerEvent.EventType

    def __init__(self,
        powerRail : typing___Optional[int] = None,
        eventType : typing___Optional[PowerEvent.EventType] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> PowerEvent: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"eventType",u"powerRail"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"eventType",u"powerRail"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"eventType",b"eventType",u"powerRail",b"powerRail"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"eventType",b"powerRail"]) -> None: ...

class TxMicro(google___protobuf___message___Message):
    timeStamp = ... # type: int

    @property
    def powerRailInfo(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[PowerRailInfo]: ...

    @property
    def powerEvent(self) -> PowerEvent: ...

    def __init__(self,
        timeStamp : typing___Optional[int] = None,
        powerRailInfo : typing___Optional[typing___Iterable[PowerRailInfo]] = None,
        powerEvent : typing___Optional[PowerEvent] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> TxMicro: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"powerEvent",u"timeStamp"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"powerEvent",u"powerRailInfo",u"timeStamp"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"powerEvent",b"powerEvent",u"timeStamp",b"timeStamp"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"powerEvent",b"powerRailInfo",b"timeStamp"]) -> None: ...

class RxMicro(google___protobuf___message___Message):

    @property
    def powerConfiguration(self) -> PowerConfiguration: ...

    @property
    def powerControl(self) -> PowerControl: ...

    def __init__(self,
        powerConfiguration : typing___Optional[PowerConfiguration] = None,
        powerControl : typing___Optional[PowerControl] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> RxMicro: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"powerConfiguration",u"powerControl"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"powerConfiguration",u"powerControl"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"powerConfiguration",b"powerConfiguration",u"powerControl",b"powerControl"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"powerConfiguration",b"powerControl"]) -> None: ...
